
import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import { BrowserRouter as Router, Route, Link} from 'react-router-dom'
import mqtt from 'mqtt'


//''''''''''''''''''''''''mqtt''''''''''''''''''''''''''//



const client=mqtt.connect('mqtt://127.0.0.1:1234');

//souscrit a tous les messages de serveur 
client.on('connect', function() { 
client.subscribe('#');
alert('connexion au serveur mqtt terminé avec succès cliquer sur ok pour continuer.. ') ;
});

var nom=null;
var vali=[];
client.on('message', function(topic,message){
  var val=topic.search('/');
var nam=topic.substring(val+1); // on récupère le nom de capteur temperateurchabre ect...
// on récupére les messages souscris 
var j = JSON.parse(message);
var value= j.value;
var typ= j.type;
nom=nam;
vali.push(value);
//console.log(vali.push(value));
});



  function Garage(props) {
    return (
      
     <button className="button" onClick={props.onClick}>
        {props.value}
        <br/><br/>  
      </button>
    
    //props.value 
    );

  }
  
  function PorteGarage(props) {
    return (
      
      <button className="button" onClick={props.onClick}>
        {props.value}
        <br/><br/>  
      </button>
     );
  }

  

  class Board extends React.Component {
    renderGarage(i) {
      return (
        <Garage
          value={this.props.Garages[i]}
          onClick={() => this.props.onClick(i)}
        />
      );
    }
  
    render() {
      return (
        <div>
          <div className="wrapper"> 
          <nav className="nav">
            {this.renderGarage(0)}
            {this.renderGarage(1)}
            {this.renderGarage(2)}
          </nav>
          </div>
        </div>
        );
    }
  }
  
  class Game extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        history: [{
          Garages: Array(9).fill(null)
        }],
        stepNumber: 0,
        xIsNext: true
      };
    }
  
    handleClick(i) {
      const history = this.state.history.slice(0, this.state.stepNumber + 1);
      const current = history[history.length - 1];
      const Garages = current.Garages.slice();
      if (calculateWinner(Garages) || Garages[i]) {
        return;
      }
      Garages[i] = this.state.xIsNext ? 'X' : 'O';
      this.setState({
        history: history.concat([{
          Garages: Garages
        }]),
        stepNumber: history.length,
        xIsNext: !this.state.xIsNext,
      });
    }
      jumpTo(step) {
        this.setState({
          stepNumber: step,
          xIsNext: (step % 2) === 0,
        });
      }
    
    render() {
      const history = this.state.history;
      const current = history[this.state.stepNumber];
      const winner = calculateWinner(current.Garages);
        
      const moves = history.map((step, move) => {
        const desc = move ?
          'Go to move #' + move :
          'Go to game start';
        return (
          <li key={move}>
            <button onClick={() => this.jumpTo(move)}>{desc}</button>
          </li>
        );
      });  
      let status;
      if (winner) {
        status = 'Winner: ' + winner;
      } else {
        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');
      }
       
      return (
        <Router>
        <body>
            <header className="header"> </header>
            <div className="game">
            <div className="game-board">
                <Board
             Garages={current.Garages}
                onClick={(i) => this.handleClick(i)}
                />
            </div>
            <div className="game-info">
           

            <article className="article">
            
            
            <Route   path="/:Porte du Garage" component={Garage}/>
            
            <Link to={"/Porte du Garage"}>Porte du Garage</Link>
            <Link to={"/Temp bureau"}> Temp bureau </Link>
            <Link to={"/Ventilateur"}>Ventilateur </Link>
            
            <div>{status}</div>
            <ol>{moves}</ol>
            <h1> {nom} </h1>
            </article>
            </div>
            </div>
            <footer className="footer"> </footer>
         </body>
         </Router>
        );
    }
  }
  
  // ========================================
  
  ReactDOM.render(
    <Game />,
    document.getElementById('root')
  );
  
  function calculateWinner(Garages) {
    const lines = [
      [0, 1, 2],
      [3, 4, 5],
      [6, 7, 8],
      [0, 3, 6],
      [1, 4, 7],
      [2, 5, 8],
      [0, 4, 8],
      [2, 4, 6],
    ];
    for (let i = 0; i < lines.length; i++) {
      const [a, b, c] = lines[i];
      if (Garages[a] && Garages[a] === Garages[b] && Garages[a] === Garages[c]) {
        return Garages[a];
      }
    }
    return null;
  }
  
  /*


  import React from 'react';
  //import logo from './logo.svg';
  import './index.css';
  import {
    BrowserRouter as Router,
    Route,
    Link
  } from 'react-router-dom'
  
  import mqtt from 'mqtt'
  
  
  //''''''''''''''''''''''''mqtt''''''''''''''''''''''''''//
  
  
  
  const client=mqtt.connect('mqtt://127.0.0.1:1234');
  
  //souscrit a tous les messages de serveur 
  client.on('connect', function() { 
  client.subscribe('#');
  alert('connexion au serveur mqtt terminé avec succès cliquer sur ok pour continuer.. ') ;
  });
  
  var nom=null;
  var vali=[];
  client.on('message', function(topic,message){
    var val=topic.search('/');
  var nam=topic.substring(val+1); // on récupère le nom de capteur temperateurchabre ect...
  // on récupére les messages souscris 
  var j = JSON.parse(message);
  var value= j.value;
  var typ= j.type;
  nom=nam;
  vali.push(value);
  });
  
  
  
  class Square extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        value: null,
      };
      
    }
  
    render() {
      return (
        <div className="wrapper">
         <article className="article">
          <center>
          <h1> Bureau </h1>
          </center>
          </article> 
          </div>
      );
    }
  }
  
  
  class Ventilateurs extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        value: null,
      };
      
    }
    render() {
  
   var messi=document.getElementById("mess")
  
  let line
  line=document.createElement("li")
  line.textContent=vali[vali.length-1]
  messi.appendChild(line)
      return (
      <div className="wrapper">
   <article className="article">
  <center>
  <h1> {this.props.value} </h1>
  <ul id="mess"> </ul>
  </center>
  </article> 
  </div>
      );
    }
  }
  
  
  class Board extends React.Component {
    
    constructor(props) {
      super(props);
      this.state = {
        value : 1
      };
    }
  
    inc() {
      this.setState({
        value:this.state.value + 1 
      });
    }
    
    render() {
      return (
        <Router>
     <body className="body">
   <header className="header"> </header>
     <div className="wrapper">
   
   <Route   path="/:tem bureau" component={Square}/>
   <Route   path="/:porte de garage" component={Ventilateurs}/>   
     <nav className="nav" >
     <Link to="/tem bureau">
       <button > temp Bureau </button>
     </Link>
       <Link to="/porte de garage"> 
      <button>  porte du garage </button>
       </Link> 
     
       <Link to="/Ventilateur">
       <button onClick={this.inc.bind(this)}>Ventilateur</button>
       </Link>
     </nav>
   </div>
  </body>
  </Router>
      );
    }
  }
  export default Board
*/